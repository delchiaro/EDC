AC_INIT(eibnetmux,1.9.14)
AC_CONFIG_AUX_DIR(scripts)
AM_INIT_AUTOMAKE
AM_CONFIG_HEADER(config.h)
AC_PREREQ(2.60)
AC_SUBST(VERSION)

dnl check these out
AC_CANONICAL_HOST
AC_STDC_HEADERS

dnl Check endianness
AC_C_BIGENDIAN(AC_DEFINE([__BYTE_ORDER],__BIG_ENDIAN,[Big Endian]),AC_DEFINE([__BYTE_ORDER],__LITTLE_ENDIAN,[Little Endian]))
AC_DEFINE([__LITTLE_ENDIAN],1234,[for the places where it is not defined])
AC_DEFINE([__BIG_ENDIAN],4321,[for the places where it is not defined])

dnl Check for programs.
AC_LANG_C
AC_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_MAKE_SET

dnl Checks for libraries.
AC_CHECK_LIB( pth, pth_spawn, [LIBPTH=-lpth], [AC_MSG_ERROR(not found - eibnetmux requires GNU Pth - see http://www.gnu.org/software/pth/)] )
AC_SUBST(LIBPTH)
PKG_CHECK_MODULES( LIBZLOGGER, libzlogger >= 1.0.5 )
AC_SUBST(LIBZLOGGER_CFLAGS)
AC_SUBST(LIBZLOGGER_LIBS)
AC_CHECK_LIB( m, log,,AC_MSG_ERROR(eibnetmux requires the standard math library) )

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_STDBOOL
AC_HEADER_TIME

AC_CHECK_HEADERS( pth.h,,AC_MSG_ERROR(eibnetmux requires GNU Pth - see http://www.gnu.org/software/pth/))
AC_CHECK_HEADERS_ONCE( arpa/inet.h )
AC_CHECK_HEADERS_ONCE( ctype.h errno.h features.h getopt.h )
AC_CHECK_HEADERS_ONCE( fcntl.h )
AC_CHECK_HEADERS_ONCE( grp.h libgen.h math.h )
AC_CHECK_HEADERS_ONCE( net/if.h )
AC_CHECK_HEADERS_ONCE( netdb.h )
AC_CHECK_HEADERS_ONCE( netinet/in.h )
AC_CHECK_HEADERS_ONCE( pwd.h signal.h )
AC_CHECK_HEADERS_ONCE( stdarg.h stdint.h stdio.h stdlib.h unistd.h string.h )	
AC_CHECK_HEADERS_ONCE( sys/ioctl.h sys/socket.h sys/types.h sys/un.h sys/stat.h )
AC_CHECK_HEADERS_ONCE( syslog.h time.h sys/time.h unistd.h )
AC_CHECK_HEADERS_ONCE( termios.h )

dnl Check for source IP address determination support
have_rtnetlink=no
AC_CHECK_HEADER( linux/rtnetlink.h, [AC_DEFINE(HAVE_LINUX_RTNETLINK, 1, [Linux netlink layer available]) have_rtnetlink=yes], [], [#include <sys/socket.h>] )
if test "$have_rtnetlink" = "yes"; then
  AC_CHECK_HEADER( linux/netlink.h,,AC_MSG_ERROR([Is this a Linux system? Missing linux/netlink.h]), [#include <sys/socket.h>] )
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_UID_T
AC_TYPE_UINT8_T
AC_TYPE_UINT16_T
AC_TYPE_UINT32_T
AC_C_CONST
AC_TYPE_SIZE_T
AC_STRUCT_TM
AC_TYPE_SIGNAL

dnl Checks for library functions.
AC_CHECK_FUNCS( strchr strdup strstr strcmp strncmp strncpy strlen )
AC_CHECK_FUNCS( strncasecmp strcasecmp strncmp )
AC_CHECK_FUNCS( strerror )
AC_CHECK_FUNCS( memcmp memcpy mempcpy memset bzero )
AC_CHECK_FUNCS( socket setsockopt gethostbyname gethostname )
AC_CHECK_FUNCS( inet_aton inet_pton inet_addr )
AC_CHECK_FUNCS( endgrent endpwent )
AC_CHECK_FUNCS( malloc realloc free )
AC_CHECK_FUNCS( gettimeofday )
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_MEMCMP
AC_FUNC_STAT

dnl Optional features.
dnl ----------------------
dnl -                    -
dnl - client only        -
dnl -                    -
dnl ----------------------
AC_MSG_CHECKING( if minimal build is requested )
AC_ARG_ENABLE( clientonly,
    AC_HELP_STRING( [--enable-clientonly], [Build only client library.] ),
    [case ${enableval} in
       yes) enable_clientonly=true ;;
        no) enable_clientonly=false ;;
         *) AC_MSG_ERROR( bad value ${enableval} for --enable-clientonly ) ;;
     esac],
    [enable_clientonly=false] )
AC_MSG_RESULT( $enable_clientonly )
AM_CONDITIONAL( MINIMAL_BUILD, test x$enable_clientonly = xtrue )

dnl ----------------------
dnl -                    -
dnl - authentication     -
dnl -                    -
dnl ----------------------
dnl authentication (requires PolarSSL for encryption support)
AC_CHECK_LIB( polarssl, havege_init, [LIBPOLARSSL=-lpolarssl], [AC_MSG_WARN(not found - disabling authentication support)] )
AC_SUBST(LIBPOLARSSL)
if test "$LIBPOLARSSL" = "-lpolarssl"; then
  AC_MSG_CHECKING(--disable-authentication argument)
  AC_ARG_ENABLE( authentication,
      AC_HELP_STRING( [--disable-authentication], [Disable authentication support (even if PolarSSL is available).] ),
      [case ${enableval} in
         yes) disable_authsupport=false ;;
          no) disable_authsupport=true ;;
           *) AC_MSG_ERROR( bad value ${enableval} for --disable_authentication ) ;;
       esac],
      [disable_authsupport=false] )
  AC_MSG_RESULT($disable_authsupport)
  if test "$disable_authsupport" = "false"; then
    AC_DEFINE([WITH_AUTHENTICATION], [], [Enable authentication support, including password encryption])
    dnl AC_SUBST([HASHER],['eibnetmux_hash${EXEEXT}'])
    dnl AC_SUBST([DHM_KEYGEN],['eibnetmux_dhm${EXEEXT}'])
    AC_CHECK_HEADERS( polarssl/dhm.h,,AC_MSG_ERROR(eibnetmux requires PolarSSL for authentication support - see http://www.polarssl.org))
  fi
  AM_CONDITIONAL( WITH_AUTHENTICATION, test x$disable_authsupport = xfalse )
else
  AM_CONDITIONAL( WITH_AUTHENTICATION, test 0 = 1 )
fi

dnl ----------------------
dnl -                    -
dnl - bus monitor        -
dnl -                    -
dnl ----------------------
AC_MSG_CHECKING(--enable-busmonitor argument)
AC_ARG_ENABLE( busmonitor,
    AC_HELP_STRING( [--enable-busmonitor], [Enable busmonitor support.] ),
    [case ${enableval} in
       yes) enable_busmonitorsupport=true ;;
        no) enable_busmonitorsupport=false ;;
         *) AC_MSG_ERROR( bad value ${enableval} for --enable_busmonitor ) ;;
     esac],
    [enable_busmonitorsupport=false] )
AC_MSG_RESULT($enable_busmonitorsupport)
if test "${enable_busmonitorsupport}" = "true"; then
  AC_DEFINE([WITH_BUSMONITOR], [], [Enable busmonitor support])
fi

dnl ----------------------
dnl -                    -
dnl - php client library -
dnl -                    -
dnl ----------------------
AC_MSG_CHECKING( if php is installed )
[php_installed=false]
[enable_phplib=false]
if php --info > /dev/null 2>&1; then
  [php_installed=true]
fi
AC_MSG_RESULT($php_installed)
if test "$php_installed" = "true"; then
  AC_MSG_CHECKING( if php client library is requested )
  AC_ARG_ENABLE( php,
      AC_HELP_STRING( [--enable-php], [Install PHP client library (if PHP is installed on system).] ),
      [case ${enableval} in
         yes) enable_phplib=true ;;
          no) enable_phplib=false ;;
           *) AC_MSG_ERROR( [bad value ${enableval} for --enable-php] ) ;;
       esac],
      [enable_phplib=false] )
  AC_MSG_RESULT( $enable_phplib )
  if test "$enable_phplib" = "true"; then
    [PHP_INSTALLDIR=`php --info | grep include_path | sed -e 's,.*=> \(.*\) => .*,\1,' | tr : "\n" | grep php5 | head -n 1`]
    AC_MSG_RESULT( PHP target directory is $PHP_INSTALLDIR )
    AC_SUBST(PHP_INSTALLDIR)
  fi
dnl else
dnl   [PHP_INSTALLDIR=]
dnl   AC_SUBST(PHP_INSTALLDIR)
fi
AM_CONDITIONAL( PHP_CLIENT, test x$enable_phplib = xtrue )


dnl ----------------------
dnl -                    -
dnl - doxygen            -
dnl -                    -
dnl ----------------------
AC_MSG_CHECKING( if doxygen is available )
DOXYGEN=doxygen
AC_ARG_WITH( doxygen,
    AC_HELP_STRING( [--with-doxygen=FILE], [Use the given path to doxygen. Used for creating C API documentation; defaults to "doxygen"] ),
	[ if test "$withval" = "no"; then
	    DOXYGEN=
	  elif test "$withval" != "yes"; then
	    DOXYGEN=$withval
	  fi] )
if test -z "$DOXYGEN" ; then
   AC_MSG_RESULT( [no] )
else
  if doxygenversion=`$DOXYGEN --version 2>&1` ; then
    AC_MSG_RESULT( [yes] )
  else
    AC_MSG_RESULT( [no] )	
    DOXYGEN=""
  fi
fi
AM_CONDITIONAL( DOXYGEN_AVAILABLE, test x$DOXYGEN != x )


dnl ----------------------
dnl -                    -
dnl - phpDocumentor      -
dnl -                    -
dnl ----------------------
AC_MSG_CHECKING( if phpDocumentor is available )
PHPDOC=phpdoc
AC_ARG_WITH( phpdoc,
    AC_HELP_STRING( [--with-phpdoc=FILE], [Use the given path to phpdoc. Used for creating PHP API documentation; defaults to "phpdoc"] ),
	[ if test "$withval" = "no"; then
	    PHPDOC=
	  elif test "$withval" != "yes"; then
	    PHPDOC=$withval
	  fi] )
if test -z "$PHPDOC" ; then
   AC_MSG_RESULT( [no] )
else
  if $PHPDOC > /dev/null 2>&1; then
    AC_MSG_RESULT( [yes] )
  else
    AC_MSG_RESULT( [no] )	
    PHPDOC=""
  fi
fi
AM_CONDITIONAL( PHPDOC_AVAILABLE, test x$PHPDOC != x )


AC_OUTPUT( Makefile
		   eibnetmux/Makefile
		   client_lib/Makefile client_lib/c/Makefile
		   client_lib/c/pkgconfig/Makefile client_lib/c/pkgconfig/libeibnetmux.pc
		   client_lib/php/Makefile
		   webmon/Makefile webmon/index.php
		   doc/Makefile doc/clib.doxyfile doc/dev.doxyfile )

dnl ----------------------
dnl -                    -
dnl - summary            -
dnl -                    -
dnl ----------------------
AC_MSG_NOTICE()
AC_MSG_NOTICE()
AC_MSG_NOTICE()
AC_MSG_NOTICE( [-------------------------------------------] )
AC_MSG_NOTICE( [-                                         -] )
AC_MSG_NOTICE( [- eibnetmux - configuration status report -] )
AC_MSG_NOTICE( [-                                         -] )
AC_MSG_NOTICE( [-                                         -] )
AC_MSG_NOTICE( [-        (check for correctness)          -] )
AC_MSG_NOTICE( [-                                         -] )
AC_MSG_NOTICE( [-------------------------------------------] )
AC_MSG_NOTICE()
if test "${enable_clientonly}" = "true"; then
  AC_MSG_NOTICE( [- minimal build (client library only)                          (--enable-clientonly)] )
else
  AC_MSG_NOTICE( [- full build (server and client library)                       (--disable-clientonly)] )
fi
if test "$LIBPOLARSSL" != "-lpolarssl"; then
  AC_MSG_NOTICE( [- authentication support disabled                              (PolarSSL not available)] )
else
  if test "$disable_authsupport" = "false"; then
    AC_MSG_NOTICE( [- authentication support enabled                               (--enable-authentication)])
  else
    AC_MSG_NOTICE( [- authentication support disabled (by user)                    (--disable-authentication)] )
  fi
fi
if test "${enable_busmonitorsupport}" = "true"; then
  AC_MSG_NOTICE( [- bus monitor support enabled                                  (--enable-busmonitor)] )
else
  AC_MSG_NOTICE( [- no bus monitor support                                       (--disable-busmonitor)] )
fi
if test "$enable_phplib" = "true"; then
  AC_MSG_NOTICE( [- php client library will be installed in $PHP_INSTALLDIR      (--enable-php)] )
else
  AC_MSG_NOTICE( [- php client library will not be installed                     (--disable-php)] )
fi
if test -z "$DOXYGEN"; then
  AC_MSG_NOTICE( [- no documentation created for C client library                (--with-doxygen)] )
else
  AC_MSG_NOTICE( [- c client library documentation will be created               (--with-doxygen)] )
fi 
if test -z "$PHPDOC"; then
  AC_MSG_NOTICE( [- no documentation created for PHP client library              (--with-phpdoc)] )
else
  AC_MSG_NOTICE( [- php client library documentation will be created             (--with-phpdoc)] )
fi 
if test "$have_rtnetlink" = "yes"; then
  AC_MSG_NOTICE( [- IP source address detection based on kernel routing table] )
else
  AC_MSG_NOTICE( [- WARNING: IP source address detection based on DNS information] )
  AC_MSG_NOTICE( [-          The EIBnet/IP protocol requires inclusion of the server's IP address in packets.] )
  AC_MSG_NOTICE( [-          YOU must make sure that a DNS lookup of your host's name] )
  AC_MSG_NOTICE( [-          returns your network interface's IP address (and NOT 127.0.0.1)] )
fi
AC_MSG_NOTICE()
AC_MSG_NOTICE()
